@model ArmaRealMapWebSite.Models.GameIssueViewModel
@using System.Globalization
@{
    ViewData["Title"] = Model.Map.Label;
    //var center = Model.Place;
    var osmEdit = FormattableString.Invariant($"https://www.openstreetmap.org/edit#map=16/{Model.Place.Latitude.ToDouble():0.0000}/{Model.Place.Longitude.ToDouble():0.0000}");
    var osm = FormattableString.Invariant($"https://www.openstreetmap.org/#map=16/{Model.Place.Latitude.ToDouble():0.0000}/{Model.Place.Longitude.ToDouble():0.0000}");
    Model.Place.LoadUTM_MGRS_Info();

    //localhost:5000/Maps/GameIssue?name=gossi&x=128&y=128

    var title = $"[{Model.Map.Label}] Signalement de problème";
    var text = $"Coordonées: {Math.Round(Model.X)}-{Math.Round(Model.Y)}\nOSM : {osm}\n\nDecrivez ici le problème constaté";

    var github = $"https://github.com/jetelain/ArmaRealMap/issues/new?title={System.Net.WebUtility.UrlEncode(title)}&body={System.Net.WebUtility.UrlEncode(text)}&labels=bug";
}

<h1>@Model.Map.Label</h1>

<h4 class="text-danger"><i class="fas fa-exclamation-circle"></i> Signaler un problème</h4>

<dl class="row">
    <dt class="col-sm-3">
        Coordonnées en jeu
    </dt>
    <dd class="col-sm-9">
        @Math.Round(Model.X) - @Math.Round(Model.Y)
    </dd>
    <dt class="col-sm-3">
        Coordonnées réelles (Lat/Long)
    </dt>
    <dd class="col-sm-9">
        @Model.Place.Latitude - @Model.Place.Longitude
    </dd>
    <dt class="col-sm-3">
        Coordonnées réelles (MGRS)
    </dt>
    <dd class="col-sm-9">
        @Model.Place.MGRS
    </dd>
</dl>

<p>
    Vous pouvez
</p>
<ul>
    <li>
        <a href="@github" class="btn btn-success mb-1 mt-1"><i class="fab fa-github"></i> Signaler le problème sur GitHub</a>,
    </li>
    <li>
        <a href="https://discord.gg/y3kfUP4" class="btn btn-primary mb-1 mt-1"><i class="fab fa-discord"></i> Contacter GrueArbre sur Discord</a> (inclure les coordonnées dans votre message), ou
    </li>
    <li>
        <a href="@osmEdit" class="btn btn-secondary mb-1 mt-1"><i class="fas fa-tools"></i> Corriger dans OpenStreetMap</a>
    </li>
</ul>


<!--  -->

<h4>Carte réelle</h4>
<p>
    <a id="osm-btn" class="btn btn-primary" href="#">Vue OSM</a>
    <a id="s2-btn" class="btn btn-outline-primary" href="#">Vue Satellite</a>
    @*<a href="@osm" class="btn btn-outline-secondary"><i class="fas fa-map-marked"></i> Ouvrir dans OpenStreetMap</a>*@
</p>
<div id="osm" style="height:75vh;">
</div>


@section Styles {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
          integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
          crossorigin="" />
}
@section Scripts {
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
            integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
            crossorigin=""></script>
    <script>

        var center = [@Model.Place.Latitude.ToDouble().ToString(CultureInfo.InvariantCulture), @Model.Place.Longitude.ToDouble().ToString(CultureInfo.InvariantCulture)];

        var rect = @Json.Serialize(Model.Map.ToLeafletRectangle());

        var mapOSM = L.map('osm').setView(center, 16);
        
        setupToggleMap(mapOSM);

        L.polygon(rect, {fill: false}).addTo(mapOSM);

        L.marker(center).addTo(mapOSM);

    </script>
}